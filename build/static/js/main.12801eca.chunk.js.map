{"version":3,"sources":["components/Header/index.jsx","containers/Home/groups.js","services/douban.js","containers/Home/index.js","App.js","serviceWorker.js","stores/globalConfigStore.js","i18n.js","index.js"],"names":["HeaderContainer","styled","div","withConfig","displayName","componentId","props","theme","Header","withTranslation","inject","observer","handleThemeChange","checked","changeTheme","_this","globalConfigStore","handleLocaleChange","_this$props$globalCon","locale","changeLocale","i18n","changeLanguage","_this$props$globalCon2","this","t","lang","react_default","a","createElement","className","es_switch","checkedChildren","unCheckedChildren","size","onChange","es_button","onClick","Component","groups","name","id","instance","axios","create","baseURL","params","apikey","getGroupTopics","request","method","url","concat","CheckableTag","tag","ListContainer","Home","withRouter","state","spinning","groupId","topics","handleCheckableTagChange","_callee","value","_ref2","data","regenerator_default","wrap","_context","prev","next","setState","sent","history","push","pathname","search","stop","query","qs","parse","location","_this2","spin","list","header","map","g","key","color","bordered","dataSource","renderItem","item","Item","href","alt","target","rel","title","HomeContainer","Page","components_Header","Switch","Route","exact","path","component","Loader","Boolean","window","hostname","match","observable","localStorage","getItem","action","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","stores","_APP_STATE_","configure","enforceActions","ReactDOM","render","BrowserRouter","basename","index_module","react","fallback","App_Loader","App_Page","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12801eca.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { inject, observer } from 'mobx-react'\nimport { Switch, Button } from 'antd'\nimport { withTranslation } from 'react-i18next'\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  background: ${props => props.theme === 'light' ? '#fff' : '#1e1f28'};\n  border-bottom: 1px solid ${props => props.theme === 'light' ? '#d9d9d9' : '#444'};\n  padding: 10px;\n  transition: .2s;\n  .header-content {\n    width: 960px;\n    margin: 0 auto;\n    padding: 0 20px;\n    .header-brand {\n      font-size: 20px;\n      font-weight: bold;\n      color: ${props => props.theme === 'light' ? '#072' : '#a6a6a6'}\n    }\n  }\n  .right-menus {\n    float: right;\n    .locale-button {\n      margin-left: 15px;\n      background-color: ${props => props.theme === 'light' ? '#fff' : '#2b2b2b'};\n      color: ${props => props.theme === 'light' ? 'rgba(0,0,0,0.65)' : '#fff'};\n    }\n  }\n`\n\n@withTranslation()\n@inject('globalConfigStore')\n@observer\nclass Header extends Component {\n\n  handleThemeChange = (checked) => {\n    const { changeTheme } = this.props.globalConfigStore\n    if (checked) {\n      changeTheme('dark')\n    } else {\n      changeTheme('light')\n    }\n  }\n\n  handleLocaleChange = () => {\n    const { locale, changeLocale } = this.props.globalConfigStore\n    const { i18n } = this.props\n    if (locale === 'zh') {\n      i18n.changeLanguage('en')\n      changeLocale('en')\n    } else {\n      i18n.changeLanguage('zh')\n      changeLocale('zh')\n    }\n  }\n\n  render () {\n    const { theme, locale } = this.props.globalConfigStore\n    const { t } = this.props\n    const lang = locale === 'zh' ? 'English' : '中文'\n\n    return <HeaderContainer theme={theme}>\n      <div className=\"header-content\">\n        <span className=\"header-brand\">\n          {t('title')}\n        </span>\n\n        <div className=\"right-menus\">\n          <Switch \n            checkedChildren=\"黑\" \n            unCheckedChildren=\"白\" \n            size=\"small\" \n            checked={theme === 'dark'} \n            onChange={this.handleThemeChange}\n          />\n\n          <Button size=\"small\" className=\"locale-button\" onClick={this.handleLocaleChange} >{lang}</Button>\n        </div>\n      </div>\n    </HeaderContainer>\n  }\n}\n\nexport default Header","export default [\n  {\n    name: '上海',\n    id: 'shanghaizufang'\n  },\n  {\n    name: '北京',\n    id: 'beijingzufang'\n  },\n  {\n    name: '深圳',\n    id: '106955'\n  },\n  {\n    name: '南京',\n    id: 'zf365'\n  },\n  {\n    name: '杭州',\n    id: 'HZhome'\n  },\n  {\n    name: '广州',\n    id: 'gz020'\n  },\n  {\n    name: '成都',\n    id: 'CDzufang'\n  },\n  {\n    name: '武汉',\n    id: '134539'\n  }\n]","import axios from 'axios'\nconst API_KEY = '0df993c66c0c636e29ecbb5344252a4a'\n\nconst instance = axios.create({\n  baseURL: 'https://douban.xiadd.me/group',\n  params: {\n    apikey: API_KEY\n  }\n})\n\n/**\n * 获取小组详情\n * @param {string} id \n */\nexport function getGroupInfo (id) {\n  return instance.request({\n    method: 'GET',\n    url: `/${id}`\n  })\n}\n\n/**\n * 获取小组讨论\n * @param {string} id \n */\nexport function getGroupTopics (id) {\n  return instance.request({\n    method: 'GET',\n    url: `/${id}/topics`\n  })\n}","import React, { Component } from 'react'\nimport { List, Tag, Spin } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport qs from 'query-string'\nimport { inject, observer } from 'mobx-react'\nimport { withTranslation } from 'react-i18next';\n\nimport groups from './groups'\nimport { getGroupTopics } from '../../services/douban'\n\nconst CheckableTag = Tag.CheckableTag\n\nconst ListContainer = styled.div`\n  width: 960px;\n  margin: 0 auto;\n  padding: 20px;\n  transition: .2s;\n  .title-link {\n    color: ${props => props.theme === 'light' ? '#000' : '#b3b3b3'};;\n    text-decoration: none;\n  }\n  .ant-tag-checkable-checked {\n    background-color: ${props => props.theme === 'light' ? '#072' : '#9c9c9c'};\n  }\n\n  .ant-list-bordered {\n    border: 1px solid ${props => props.theme === 'light' ? '#e8e8e8' : '#403f3f'};\n    .ant-list-item, .ant-list-header {\n      border-bottom: 1px solid ${props => props.theme === 'light' ? '#e8e8e8' : '#403f3f'}!important;\n    }\n  }\n\n  .post-list {\n    background-color: ${props => props.theme === 'light' ? '#fff' : '#1b1c23'};\n    .ant-list-split .ant-list-header {\n      border-bottom: 1px solid #403f3f\n    }\n  }\n\n  .ant-tag {\n    color: ${props => props.theme === 'light' ? 'rgba(0, 0, 0, 0.65)' : '#9c9c9c'};\n  }\n\n  .ant-tag-checkable-checked {\n    color: #fff;\n  }\n\n  .ant-tag-checkable {\n    &:active {\n      background-color: ${props => props.theme === 'light' ? 'rgba(0, 0, 0, 0.65)' : '#9c9c9c'};\n    }\n    &:not(.ant-tag-checkable-checked):hover {\n      color: ${props => props.theme === 'light' ? '#072' : '#9c9c9c'};\n    }\n  }\n`\n\n@withTranslation()\n@withRouter\n@inject('globalConfigStore')\n@observer\nclass Home extends Component {\n\n  state = {\n    spinning: true,\n    groupId: 'shanghaizufang',\n    topics: []\n  }\n\n  async componentDidMount () {\n    const query = qs.parse(this.props.location.search)\n    const groupId = query.groupId || this.state.groupId\n    const { data } = await getGroupTopics(groupId)\n    this.setState({\n      groupId,\n      topics: data.topics,\n      spinning: false\n    })\n  }\n\n  handleCheckableTagChange = async (value, id) => {\n    if (value) {\n      await this.setState({ spinning: true })\n      const { data } = await getGroupTopics(id)\n      this.setState({\n        groupId: id,\n        topics: data.topics,\n        spinning: false\n      })\n      this.props.history.push({\n        pathname: '/',\n        search: `?groupId=${id}`\n      })\n    }\n  }\n\n  render () {\n\n    const { theme } = this.props.globalConfigStore\n    const { t } = this.props\n\n    const ListHeader = () => {\n      return groups.map(g => (\n        <CheckableTag\n          key={g.id}\n          checked={this.state.groupId === g.id}\n          color=\"#072\"\n          onChange={(value) => this.handleCheckableTagChange(value, g.id)}\n        >\n          {t(g.name)}\n        </CheckableTag>\n      ))\n    }\n\n    return (\n      <ListContainer theme={theme}>\n        <Spin spinning={this.state.spinning}>\n          <List\n            className=\"post-list\"\n            header={<ListHeader />}\n            bordered\n            dataSource={this.state.topics}\n            renderItem={item => (<List.Item>\n              <a className=\"title-link\" href={item.alt} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a>\n            </List.Item>)}\n          />\n        </Spin>\n      </ListContainer>\n    )\n  }\n}\n\nexport default Home","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport { inject, observer } from 'mobx-react'\nimport styled from 'styled-components'\n\nimport Header from './components/Header'\nimport Home from './containers/Home'\n\nconst HomeContainer = styled.div`\n  min-height: 100vh;\n  transition: .2s;\n  background: ${props => props.theme === 'light' ? '#f5f5f5' : '#121417'};\n`\n\n@inject('globalConfigStore')\n@observer\nclass Page extends Component {\n  render() {\n    const { theme } = this.props.globalConfigStore\n    return (\n      <HomeContainer className=\"App\" theme={theme}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>   \n      </HomeContainer>\n    )\n  }\n}\n\nconst Loader = () => (\n  <div className=\"App\">\n  </div>\n)\n\nexport default function App() {\n  return (\n    <Suspense fallback={<Loader />}>\n      <Page />\n    </Suspense>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from 'mobx'\n\nclass GlobalConfigStore {\n  @observable theme = 'light'\n  @observable locale = window.localStorage.getItem('i18nextLng') || 'zh'\n\n  @action changeTheme = theme => {\n    this.theme = theme\n  }\n\n  @action changeLocale = (locale) => {\n    this.locale = locale\n  }\n}\n\nexport default new GlobalConfigStore()","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { configure } from 'mobx'\nimport { Provider } from 'mobx-react'\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport globalConfigStore from './stores/globalConfigStore'\n// import i18n (needs to be bundled ;))\nimport './i18n'\n\nconst stores = {\n  globalConfigStore\n}\n\n// 方便调试\nwindow._APP_STATE_ = stores\n\nconfigure({\n  enforceActions: 'never'\n})\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <Provider {...stores}>\n      <App />\n    </Provider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}